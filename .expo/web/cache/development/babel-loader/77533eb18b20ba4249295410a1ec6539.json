{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { DATE_SET_ACTION, TIME_SET_ACTION, DISMISS_ACTION, NEUTRAL_BUTTON_ACTION, ANDROID_DISPLAY, ANDROID_MODE, ANDROID_EVT_TYPE, EVENT_TYPE_SET } from \"./constants\";\nimport invariant from 'invariant';\nimport { getOpenPicker, timeZoneOffsetDateSetter, validateAndroidProps } from \"./androidUtils\";\nimport pickers from \"./picker\";\n\nfunction open(props) {\n  var _props$mode = props.mode,\n      mode = _props$mode === void 0 ? ANDROID_MODE.date : _props$mode,\n      _props$display = props.display,\n      display = _props$display === void 0 ? ANDROID_DISPLAY.default : _props$display,\n      originalValue = props.value,\n      is24Hour = props.is24Hour,\n      minimumDate = props.minimumDate,\n      maximumDate = props.maximumDate,\n      neutralButtonLabel = props.neutralButtonLabel,\n      minuteInterval = props.minuteInterval,\n      timeZoneOffsetInMinutes = props.timeZoneOffsetInMinutes,\n      onChange = props.onChange,\n      onError = props.onError;\n  validateAndroidProps(props);\n  invariant(originalValue, 'A date or time must be specified as `value` prop.');\n  var valueTimestamp = originalValue.getTime();\n  var openPicker = getOpenPicker({\n    mode: mode,\n    value: valueTimestamp,\n    display: display,\n    is24Hour: is24Hour,\n    minimumDate: minimumDate,\n    maximumDate: maximumDate,\n    neutralButtonLabel: neutralButtonLabel,\n    minuteInterval: minuteInterval,\n    timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n  });\n\n  var presentPicker = function _callee() {\n    var _await$openPicker, action, day, month, year, minute, hour, date, event;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(openPicker());\n\n          case 3:\n            _await$openPicker = _context.sent;\n            action = _await$openPicker.action;\n            day = _await$openPicker.day;\n            month = _await$openPicker.month;\n            year = _await$openPicker.year;\n            minute = _await$openPicker.minute;\n            hour = _await$openPicker.hour;\n            date = new Date(valueTimestamp);\n            event = {\n              type: EVENT_TYPE_SET,\n              nativeEvent: {}\n            };\n            _context.t0 = action;\n            _context.next = _context.t0 === DATE_SET_ACTION ? 15 : _context.t0 === TIME_SET_ACTION ? 20 : _context.t0 === NEUTRAL_BUTTON_ACTION ? 25 : _context.t0 === DISMISS_ACTION ? 28 : 28;\n            break;\n\n          case 15:\n            date.setFullYear(year, month, day);\n            date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n            event.nativeEvent.timestamp = date.getTime();\n            onChange == null ? void 0 : onChange(event, date);\n            return _context.abrupt(\"break\", 31);\n\n          case 20:\n            date.setHours(hour, minute);\n            date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n            event.nativeEvent.timestamp = date.getTime();\n            onChange == null ? void 0 : onChange(event, date);\n            return _context.abrupt(\"break\", 31);\n\n          case 25:\n            event.type = ANDROID_EVT_TYPE.neutralButtonPressed;\n            onChange == null ? void 0 : onChange(event, originalValue);\n            return _context.abrupt(\"break\", 31);\n\n          case 28:\n            event.type = ANDROID_EVT_TYPE.dismissed;\n            onChange == null ? void 0 : onChange(event, originalValue);\n            return _context.abrupt(\"break\", 31);\n\n          case 31:\n            _context.next = 36;\n            break;\n\n          case 33:\n            _context.prev = 33;\n            _context.t1 = _context[\"catch\"](0);\n            onError && onError(_context.t1);\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 33]], Promise);\n  };\n\n  presentPicker();\n}\n\nfunction dismiss(mode) {\n  pickers[mode].dismiss();\n}\n\nexport var DateTimePickerAndroid = {\n  open: open,\n  dismiss: dismiss\n};","map":{"version":3,"names":["DATE_SET_ACTION","TIME_SET_ACTION","DISMISS_ACTION","NEUTRAL_BUTTON_ACTION","ANDROID_DISPLAY","ANDROID_MODE","ANDROID_EVT_TYPE","EVENT_TYPE_SET","invariant","getOpenPicker","timeZoneOffsetDateSetter","validateAndroidProps","pickers","open","props","mode","date","display","default","originalValue","value","is24Hour","minimumDate","maximumDate","neutralButtonLabel","minuteInterval","timeZoneOffsetInMinutes","onChange","onError","valueTimestamp","getTime","openPicker","presentPicker","action","day","month","year","minute","hour","Date","event","type","nativeEvent","setFullYear","timestamp","setHours","neutralButtonPressed","dismissed","dismiss","DateTimePickerAndroid"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/node_modules/@react-native-community/datetimepicker/src/DateTimePickerAndroid.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport {\n  DATE_SET_ACTION,\n  TIME_SET_ACTION,\n  DISMISS_ACTION,\n  NEUTRAL_BUTTON_ACTION,\n  ANDROID_DISPLAY,\n  ANDROID_MODE,\n  ANDROID_EVT_TYPE,\n  EVENT_TYPE_SET,\n} from './constants';\nimport invariant from 'invariant';\n\nimport type {DateTimePickerEvent, AndroidNativeProps} from './types';\nimport {\n  getOpenPicker,\n  timeZoneOffsetDateSetter,\n  validateAndroidProps,\n} from './androidUtils';\nimport pickers from './picker';\n\nfunction open(props: AndroidNativeProps) {\n  const {\n    mode = ANDROID_MODE.date,\n    display = ANDROID_DISPLAY.default,\n    value: originalValue,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n    onChange,\n    onError,\n  } = props;\n  validateAndroidProps(props);\n  invariant(originalValue, 'A date or time must be specified as `value` prop.');\n\n  const valueTimestamp = originalValue.getTime();\n  const openPicker = getOpenPicker({\n    mode,\n    value: valueTimestamp,\n    display,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n  });\n\n  const presentPicker = async () => {\n    try {\n      const {action, day, month, year, minute, hour} = await openPicker();\n      let date = new Date(valueTimestamp);\n      let event: DateTimePickerEvent = {\n        type: EVENT_TYPE_SET,\n        nativeEvent: {},\n      };\n\n      switch (action) {\n        case DATE_SET_ACTION:\n          date.setFullYear(year, month, day);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case TIME_SET_ACTION:\n          date.setHours(hour, minute);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case NEUTRAL_BUTTON_ACTION:\n          event.type = ANDROID_EVT_TYPE.neutralButtonPressed;\n          onChange?.(event, originalValue);\n          break;\n\n        case DISMISS_ACTION:\n        default:\n          event.type = ANDROID_EVT_TYPE.dismissed;\n          onChange?.(event, originalValue);\n          break;\n      }\n    } catch (error) {\n      onError && onError(error);\n    }\n  };\n  presentPicker();\n}\n\nfunction dismiss(mode: AndroidNativeProps['mode']) {\n  // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n  pickers[mode].dismiss();\n}\n\nexport const DateTimePickerAndroid = {open, dismiss};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}