{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { CustomTabButton } from \"../../common\";\nimport { HomeRoutesContainer } from \"./home\";\nimport UserContext from \"../../context/auth\";\nimport { MessageStartContainer } from \"../message/start\";\nimport { Investment, Network } from \"../../screens\";\nimport { ScoutingContainer } from \"../scouting\";\nimport { FinancialServicesProjectListings } from \"../financialservicesprojectlistings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport var HomeStartRoutesContainer = function HomeStartRoutesContainer() {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"HomeRoutesContainer\") {\n            iconName = \"home-outline\";\n          } else if (route.name === \"Network\") {\n            iconName = \"git-network-outline\";\n          } else if (route.name === \"ArtistProfile\") {\n            iconName = \"md-bar-chart\";\n          } else if (route.name === \"Message\") {\n            iconName = \"chatbox-outline\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 16,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#fff\",\n        tabBarLabelStyle: {\n          fontSize: 14\n        },\n        tabBarStyle: {\n          backgroundColor: \"#0B0B0B\",\n          position: \"absolute\",\n          borderTopWidth: 0\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeRoutesContainer\",\n      component: HomeRoutesContainer,\n      options: function options(_ref3) {\n        var _getFocusedRouteNameF;\n\n        var route = _ref3.route;\n        var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : \"\";\n\n        if (routeName === \"TopTrendingScouts\" || routeName === \"TopTrendingArtist\") {\n          return {\n            tabBarStyle: {\n              display: \"none\"\n            }\n          };\n        }\n\n        return {\n          tabBarLabel: \"Home\"\n        };\n      }\n    }), user !== null && _jsxs(_Fragment, {\n      children: [_jsx(Tab.Screen, {\n        name: \"ArtistProfile\",\n        component: FinancialServicesProjectListings,\n        options: {\n          tabBarLabel: \"Invest\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Middle\",\n        component: ScoutingContainer,\n        options: {\n          tabBarButton: function tabBarButton(props) {\n            return _jsx(CustomTabButton, _objectSpread({}, props));\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Message\",\n        component: MessageStartContainer,\n        options: function options(_ref4) {\n          var _getFocusedRouteNameF2;\n\n          var route = _ref4.route;\n          var routeName = (_getFocusedRouteNameF2 = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF2 : \"\";\n\n          if (routeName === \"MessageDetails\") {\n            return {\n              tabBarStyle: {\n                display: \"none\"\n              }\n            };\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Network\",\n        component: Network,\n        options: {\n          tabBarLabel: \"Network\"\n        }\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["useContext","createBottomTabNavigator","getFocusedRouteNameFromRoute","Ionicons","CustomTabButton","HomeRoutesContainer","UserContext","MessageStartContainer","Investment","Network","ScoutingContainer","FinancialServicesProjectListings","Tab","HomeStartRoutesContainer","user","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarLabelStyle","fontSize","tabBarStyle","backgroundColor","position","borderTopWidth","routeName","display","tabBarLabel","tabBarButton","props"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/src/navigations /home/start.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nimport { CustomTabButton } from \"../../common\";\nimport { HomeRoutesContainer } from \"./home\";\nimport UserContext from \"../../context/auth\";\nimport { MessageStartContainer } from \"../message/start\";\nimport { Investment, Network } from \"../../screens\";\nimport { ScoutingContainer } from \"../scouting\";\nimport { FinancialServicesProjectListings } from \"../financialservicesprojectlistings\";\n\nconst Tab = createBottomTabNavigator();\n\nexport const HomeStartRoutesContainer = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === \"HomeRoutesContainer\") {\n            iconName = \"home-outline\";\n          } else if (route.name === \"Network\") {\n            iconName = \"git-network-outline\";\n          } else if (route.name === \"ArtistProfile\") {\n            iconName = \"md-bar-chart\";\n          } else if (route.name === \"Message\") {\n            iconName = \"chatbox-outline\";\n          }\n          return <Ionicons name={iconName} size={16} color={color} />;\n        },\n        tabBarActiveTintColor: \"#fff\",\n        tabBarLabelStyle: { fontSize: 14 },\n        tabBarStyle: {\n          backgroundColor: \"#0B0B0B\",\n          position: \"absolute\",\n          borderTopWidth: 0,\n        },\n      })}\n    >\n      <Tab.Screen\n        name=\"HomeRoutesContainer\"\n        component={HomeRoutesContainer}\n        options={({ route }) => {\n          const routeName = getFocusedRouteNameFromRoute(route) ?? \"\";\n          if (\n            routeName === \"TopTrendingScouts\" ||\n            routeName === \"TopTrendingArtist\"\n          ) {\n            return {\n              tabBarStyle: {\n                display: \"none\",\n              },\n            };\n          }\n          return {\n            tabBarLabel: \"Home\",\n          };\n        }}\n      />\n\n      {user !== null && (\n        <>\n          <Tab.Screen\n            name=\"ArtistProfile\"\n            component={FinancialServicesProjectListings}\n            options={{\n              tabBarLabel: \"Invest\",\n            }}\n          />\n          <Tab.Screen\n            name=\"Middle\"\n            component={ScoutingContainer}\n            options={{\n              tabBarButton: (props) => <CustomTabButton {...props} />,\n            }}\n          />\n\n          <Tab.Screen\n            name=\"Message\"\n            component={MessageStartContainer}\n            options={({ route }) => {\n              const routeName = getFocusedRouteNameFromRoute(route) ?? \"\";\n\n              if (routeName === \"MessageDetails\") {\n                return {\n                  tabBarStyle: {\n                    display: \"none\",\n                  },\n                };\n              }\n            }}\n          />\n          <Tab.Screen\n            name=\"Network\"\n            component={Network}\n            options={{\n              tabBarLabel: \"Network\",\n            }}\n          />\n        </>\n      )}\n    </Tab.Navigator>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}