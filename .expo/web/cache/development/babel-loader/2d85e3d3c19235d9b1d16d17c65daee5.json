{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UserContext = React.createContext();\nexport var UserProvider = function UserProvider(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var updateData = function updateData() {\n    console.log(\"Update me\");\n  };\n\n  return _jsx(UserContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      updateData: updateData\n    },\n    children: props.children\n  });\n};\nexport default UserContext;","map":{"version":3,"names":["React","useState","UserContext","createContext","UserProvider","props","user","setUser","updateData","console","log","children"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/src/context/auth/index.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst UserContext = React.createContext();\n\nexport const UserProvider = (props) => {\n  // const [user, setUser] = useState({\n  //   name: \"Md Abdullah Al Noman\",\n  //   email: \"yabdullahalnoman@gmail.com\",\n  // });\n\n  const [user, setUser] = useState(null);\n\n  const updateData = () => {\n    console.log(\"Update me\");\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n        updateData,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContext;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;EAMrC,gBAAwBJ,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOK,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBC,OAAO,CAACC,GAAR,CAAY,WAAZ;EACD,CAFD;;EAIA,OACE,KAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLJ,IAAI,EAAJA,IADK;MAELC,OAAO,EAAPA,OAFK;MAGLC,UAAU,EAAVA;IAHK,CADT;IAAA,UAOGH,KAAK,CAACM;EAPT,EADF;AAWD,CAvBM;AAyBP,eAAeT,WAAf"},"metadata":{},"sourceType":"module"}