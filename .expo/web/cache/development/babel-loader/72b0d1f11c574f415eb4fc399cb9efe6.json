{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { Input } from \"native-base\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Buttons, ForgotHeader, Spacer } from \"../../common\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ForgetPasswordScreen3 = function ForgetPasswordScreen3(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: {\n      value: \"\",\n      error: false\n    },\n    password: {\n      value: \"\",\n      error: false\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  console.log(form);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: 'light'\n    }), _jsx(ForgotHeader, {}), _jsxs(ScrollView, {\n      style: {\n        marginHorizontal: 15\n      },\n      children: [_jsx(View, {\n        style: {\n          marginTop: 100\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: 28\n          },\n          children: \"Reset Password  \"\n        })\n      }), _jsx(Spacer, {}), _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: 17,\n            fontWeight: \"200\"\n          },\n          children: \"Your new password must be different from previously used passwords.\"\n        })\n      }), _jsx(Spacer, {}), _jsx(Spacer, {}), _jsxs(View, {\n        children: [_jsx(Input, {\n          type: 'password',\n          h: Platform.OS === 'ios' ? 50 : 50,\n          placeholder: \"Password\",\n          size: \"lg\",\n          _focus: {\n            borderColor: \"white\",\n            color: \"white\"\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"#B3B3B3\",\n            fontSize: 12,\n            marginTop: 5\n          },\n          children: \"Must be at least 8 characters.\"\n        }), _jsx(Spacer, {}), _jsx(Input, {\n          type: 'password',\n          h: Platform.OS === 'ios' ? 50 : 50,\n          placeholder: \"Confirm Password\",\n          size: \"lg\",\n          _focus: {\n            borderColor: \"white\",\n            color: \"white\"\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"#B3B3B3\",\n            fontSize: 12,\n            marginTop: 5\n          },\n          children: \"Both password must match.\"\n        })]\n      }), _jsx(Spacer, {}), _jsx(Buttons, {\n        onPress: function onPress() {\n          return navigation.navigate('forgetpassword4');\n        },\n        title: 'Reset Password',\n        fillBtn: true\n      }), _jsx(Spacer, {}), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"#378EF0\",\n            textAlign: \"center\",\n            fontSize: 18\n          },\n          children: \"Skip, I\\u2019ll confirm later\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#0B0B0B\",\n    paddingTop: Platform.OS === 'ios' ? 0 : 40,\n    position: \"relative\"\n  }\n});","map":{"version":3,"names":["useState","Input","Buttons","ForgotHeader","Spacer","StatusBar","ForgetPasswordScreen3","navigation","email","value","error","password","form","setForm","console","log","styles","container","marginHorizontal","marginTop","color","fontSize","fontWeight","Platform","OS","borderColor","navigate","goBack","textAlign","StyleSheet","create","flex","backgroundColor","paddingTop","position"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/src/screens/auth/forgetpassword3.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Input } from \"native-base\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  SafeAreaView,\n  StyleSheet,\n  Platform,\n  ScrollView\n} from \"react-native\";\n\nimport { Buttons, ForgotHeader, Spacer } from \"../../common\";\nimport { StatusBar } from \"expo-status-bar\";\n\nexport const ForgetPasswordScreen3 = ({ navigation }) => {\n  const [form, setForm] = useState({\n    email: {\n      value: \"\",\n      error: false,\n    },\n    password: {\n      value: \"\",\n      error: false,\n    },\n  });\n  console.log(form);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style={'light'} />\n      <ForgotHeader />\n      <ScrollView style={{ marginHorizontal: 15, }} >\n        <View style={{ marginTop: 100 }} >\n          <Text style={{ color: \"white\", fontSize: 28, }}>Reset Password  </Text>\n        </View>\n        <Spacer />\n        <View >\n          <Text style={{ color: \"white\", fontSize: 17, fontWeight: \"200\" }}>\n            Your new password must be different from previously used passwords.\n          </Text>\n        </View>\n        <Spacer />\n        <Spacer />\n\n        <View>\n          <Input\n            type={'password'}\n            h={Platform.OS === 'ios' ? 50 : 50}\n            placeholder=\"Password\"\n            size=\"lg\"\n            _focus={{ borderColor: \"white\", color: \"white\" }}\n          />\n          <Text style={{ color: \"#B3B3B3\", fontSize: 12, marginTop: 5 }}>Must be at least 8 characters.</Text>\n          <Spacer />\n          <Input\n            type={'password'}\n            h={Platform.OS === 'ios' ? 50 : 50}\n            placeholder=\"Confirm Password\"\n            size=\"lg\"\n            _focus={{ borderColor: \"white\", color: \"white\" }}\n          />\n          <Text style={{ color: \"#B3B3B3\", fontSize: 12, marginTop: 5 }}>Both password must match.</Text>\n        </View>\n        <Spacer />\n        <Buttons onPress={() => navigation.navigate('forgetpassword4')} title={'Reset Password'} fillBtn />\n        <Spacer />\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Text style={{ color: \"#378EF0\", textAlign: \"center\", fontSize: 18 }}>\n            Skip, Iâ€™ll confirm later\n          </Text>\n        </TouchableOpacity>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#0B0B0B\",\n    paddingTop: Platform.OS === 'ios' ? 0 : 40,\n    position: \"relative\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}