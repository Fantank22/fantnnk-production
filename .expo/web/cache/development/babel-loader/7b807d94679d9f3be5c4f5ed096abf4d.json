{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Text } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var MultiCheckBox = function MultiCheckBox(_ref) {\n  var lable = _ref.lable,\n      form = _ref.form,\n      setForm = _ref.setForm,\n      value = _ref.value,\n      name = _ref.name,\n      max = _ref.max;\n  var selected = form[name].includes(value);\n  return _jsx(Box, {\n    style: selected ? styles.checkboxActive : styles.checkbox,\n    flex: 1,\n    children: _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        if (form[name].includes(value)) {\n          setForm(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, prev[name].filter(function (item) {\n              return item !== value;\n            })));\n          });\n        } else {\n          setForm(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, [].concat(_toConsumableArray(prev[name]), [value])));\n          });\n        }\n      },\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      disabled: !form[name].includes(value) && form[name].length >= max,\n      children: [_jsx(Text, {\n        style: styles.checkboxLabel,\n        children: lable\n      }), selected && _jsx(Image, {\n        source: require(\"../assets/icons/check-box-icon.png\"),\n        style: styles.checkedIcon\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  checkbox: {\n    backgroundColor: \"#1A1A1A\",\n    borderRadius: 8,\n    height: 88,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#2C2C2C\"\n  },\n  checkboxActive: {\n    backgroundColor: \"#1A1A1A\",\n    borderRadius: 8,\n    height: 88,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#378EF0\"\n  },\n  checkboxLabel: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  checkedIcon: {\n    height: 24,\n    width: 24,\n    position: \"absolute\",\n    top: 10,\n    right: 10\n  }\n});","map":{"version":3,"names":["Box","Text","MultiCheckBox","lable","form","setForm","value","name","max","selected","includes","styles","checkboxActive","checkbox","prev","filter","item","height","width","display","justifyContent","alignItems","length","checkboxLabel","require","checkedIcon","StyleSheet","create","backgroundColor","borderRadius","borderWidth","borderColor","color","fontSize","fontWeight","position","top","right"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/src/common/components/custommulicheckbox.js"],"sourcesContent":["import { Image, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Box, Text } from \"native-base\";\n\nexport const MultiCheckBox = ({ lable, form, setForm, value, name, max }) => {\n  const selected = form[name].includes(value);\n\n  return (\n    <Box style={selected ? styles.checkboxActive : styles.checkbox} flex={1}>\n      <TouchableOpacity\n        onPress={() => {\n          if (form[name].includes(value)) {\n            setForm((prev) => ({\n              ...prev,\n              [name]: prev[name].filter((item) => item !== value),\n            }));\n          } else {\n            setForm((prev) => ({ ...prev, [name]: [...prev[name], value] }));\n          }\n        }}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        disabled={!form[name].includes(value) && form[name].length >= max}\n      >\n        <Text style={styles.checkboxLabel}>{lable}</Text>\n\n        {selected && (\n          <Image\n            source={require(\"../assets/icons/check-box-icon.png\")}\n            style={styles.checkedIcon}\n          />\n        )}\n      </TouchableOpacity>\n    </Box>\n  );\n};\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    backgroundColor: \"#1A1A1A\",\n    borderRadius: 8,\n    height: 88,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#2C2C2C\",\n  },\n\n  checkboxActive: {\n    backgroundColor: \"#1A1A1A\",\n    borderRadius: 8,\n    height: 88,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#378EF0\",\n  },\n\n  checkboxLabel: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n\n  checkedIcon: {\n    height: 24,\n    width: 24,\n    position: \"absolute\",\n    top: 10,\n    right: 10,\n  },\n});\n"],"mappings":";;;;;;;;;;AAEA,SAASA,GAAT,EAAcC,IAAd,QAA0B,aAA1B;;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgD;EAAA,IAA7CC,KAA6C,QAA7CA,KAA6C;EAAA,IAAtCC,IAAsC,QAAtCA,IAAsC;EAAA,IAAhCC,OAAgC,QAAhCA,OAAgC;EAAA,IAAvBC,KAAuB,QAAvBA,KAAuB;EAAA,IAAhBC,IAAgB,QAAhBA,IAAgB;EAAA,IAAVC,GAAU,QAAVA,GAAU;EAC3E,IAAMC,QAAQ,GAAGL,IAAI,CAACG,IAAD,CAAJ,CAAWG,QAAX,CAAoBJ,KAApB,CAAjB;EAEA,OACE,KAAC,GAAD;IAAK,KAAK,EAAEG,QAAQ,GAAGE,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,QAAtD;IAAgE,IAAI,EAAE,CAAtE;IAAA,UACE,MAAC,gBAAD;MACE,OAAO,EAAE,mBAAM;QACb,IAAIT,IAAI,CAACG,IAAD,CAAJ,CAAWG,QAAX,CAAoBJ,KAApB,CAAJ,EAAgC;UAC9BD,OAAO,CAAC,UAACS,IAAD;YAAA,uCACHA,IADG,2BAELP,IAFK,EAEEO,IAAI,CAACP,IAAD,CAAJ,CAAWQ,MAAX,CAAkB,UAACC,IAAD;cAAA,OAAUA,IAAI,KAAKV,KAAnB;YAAA,CAAlB,CAFF;UAAA,CAAD,CAAP;QAID,CALD,MAKO;UACLD,OAAO,CAAC,UAACS,IAAD;YAAA,uCAAgBA,IAAhB,2BAAuBP,IAAvB,+BAAkCO,IAAI,CAACP,IAAD,CAAtC,IAA8CD,KAA9C;UAAA,CAAD,CAAP;QACD;MACF,CAVH;MAWE,KAAK,EAAE;QACLW,MAAM,EAAE,MADH;QAELC,KAAK,EAAE,MAFF;QAGLC,OAAO,EAAE,MAHJ;QAILC,cAAc,EAAE,QAJX;QAKLC,UAAU,EAAE;MALP,CAXT;MAkBE,QAAQ,EAAE,CAACjB,IAAI,CAACG,IAAD,CAAJ,CAAWG,QAAX,CAAoBJ,KAApB,CAAD,IAA+BF,IAAI,CAACG,IAAD,CAAJ,CAAWe,MAAX,IAAqBd,GAlBhE;MAAA,WAoBE,KAAC,IAAD;QAAM,KAAK,EAAEG,MAAM,CAACY,aAApB;QAAA,UAAoCpB;MAApC,EApBF,EAsBGM,QAAQ,IACP,KAAC,KAAD;QACE,MAAM,EAAEe,OAAO,sCADjB;QAEE,KAAK,EAAEb,MAAM,CAACc;MAFhB,EAvBJ;IAAA;EADF,EADF;AAiCD,CApCM;AAsCP,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;EAC/Bd,QAAQ,EAAE;IACRe,eAAe,EAAE,SADT;IAERC,YAAY,EAAE,CAFN;IAGRZ,MAAM,EAAE,EAHA;IAIRE,OAAO,EAAE,MAJD;IAKRC,cAAc,EAAE,QALR;IAMRC,UAAU,EAAE,QANJ;IAORS,WAAW,EAAE,CAPL;IAQRC,WAAW,EAAE;EARL,CADqB;EAY/BnB,cAAc,EAAE;IACdgB,eAAe,EAAE,SADH;IAEdC,YAAY,EAAE,CAFA;IAGdZ,MAAM,EAAE,EAHM;IAIdE,OAAO,EAAE,MAJK;IAKdC,cAAc,EAAE,QALF;IAMdC,UAAU,EAAE,QANE;IAOdS,WAAW,EAAE,CAPC;IAQdC,WAAW,EAAE;EARC,CAZe;EAuB/BR,aAAa,EAAE;IACbS,KAAK,EAAE,MADM;IAEbC,QAAQ,EAAE,EAFG;IAGbC,UAAU,EAAE;EAHC,CAvBgB;EA6B/BT,WAAW,EAAE;IACXR,MAAM,EAAE,EADG;IAEXC,KAAK,EAAE,EAFI;IAGXiB,QAAQ,EAAE,UAHC;IAIXC,GAAG,EAAE,EAJM;IAKXC,KAAK,EAAE;EALI;AA7BkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}