{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { CountryModal } from \"./CountryModal\";\nimport { HeaderModal } from \"./HeaderModal\";\nimport { FlagType } from \"./types\";\nimport { CountryFilter } from \"./CountryFilter\";\nimport { FlagButton } from \"./FlagButton\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryList } from \"./CountryList\";\n\nvar renderFlagButton = function renderFlagButton(props) {\n  return props.renderFlagButton ? props.renderFlagButton(props) : React.createElement(FlagButton, _extends({}, props));\n};\n\nvar _renderFilter = function renderFilter(props) {\n  return props.renderCountryFilter ? props.renderCountryFilter(props) : React.createElement(CountryFilter, _extends({}, props));\n};\n\nexport var CountryPicker = function CountryPicker(props) {\n  var countryCode = props.countryCode,\n      region = props.region,\n      subregion = props.subregion,\n      countryCodes = props.countryCodes,\n      renderButton = props.renderFlagButton,\n      renderCountryFilter = props.renderCountryFilter,\n      filterProps = props.filterProps,\n      modalProps = props.modalProps,\n      flatListProps = props.flatListProps,\n      onSelect = props.onSelect,\n      withEmoji = props.withEmoji,\n      withFilter = props.withFilter,\n      withCloseButton = props.withCloseButton,\n      withCountryNameButton = props.withCountryNameButton,\n      withCallingCodeButton = props.withCallingCodeButton,\n      withCurrencyButton = props.withCurrencyButton,\n      containerButtonStyle = props.containerButtonStyle,\n      withAlphaFilter = props.withAlphaFilter,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency,\n      withFlag = props.withFlag,\n      withModal = props.withModal,\n      disableNativeModal = props.disableNativeModal,\n      withFlagButton = props.withFlagButton,\n      handleClose = props.onClose,\n      handleOpen = props.onOpen,\n      closeButtonImage = props.closeButtonImage,\n      closeButtonStyle = props.closeButtonStyle,\n      closeButtonImageStyle = props.closeButtonImageStyle,\n      excludeCountries = props.excludeCountries,\n      placeholder = props.placeholder,\n      preferredCountries = props.preferredCountries;\n\n  var _useState = useState({\n    visible: props.visible || false,\n    countries: [],\n    filter: '',\n    filterFocus: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useContext = useContext(),\n      translation = _useContext.translation,\n      getCountriesAsync = _useContext.getCountriesAsync;\n\n  var visible = state.visible,\n      filter = state.filter,\n      countries = state.countries,\n      filterFocus = state.filterFocus;\n  useEffect(function () {\n    if (state.visible !== props.visible) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        visible: props.visible || false\n      }));\n    }\n  }, [props.visible]);\n\n  var onOpen = function onOpen() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      visible: true\n    }));\n\n    if (handleOpen) {\n      handleOpen();\n    }\n  };\n\n  var onClose = function onClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      filter: '',\n      visible: false\n    }));\n\n    if (handleClose) {\n      handleClose();\n    }\n  };\n\n  var setFilter = function setFilter(filter) {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filter: filter\n    }));\n  };\n\n  var setCountries = function setCountries(countries) {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      countries: countries\n    }));\n  };\n\n  var onSelectClose = function onSelectClose(country) {\n    onSelect(country);\n    onClose();\n  };\n\n  var onFocus = function onFocus() {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filterFocus: true\n    }));\n  };\n\n  var onBlur = function onBlur() {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filterFocus: false\n    }));\n  };\n\n  var flagProp = {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    renderFlagButton: renderButton,\n    onOpen: onOpen,\n    containerButtonStyle: containerButtonStyle,\n    placeholder: placeholder\n  };\n  useEffect(function () {\n    getCountriesAsync(withEmoji ? FlagType.EMOJI : FlagType.FLAT, translation, region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter).then(setCountries).catch(console.warn);\n  }, [translation, withEmoji]);\n  return React.createElement(React.Fragment, null, withModal && renderFlagButton(flagProp), React.createElement(CountryModal, _extends({}, _objectSpread({\n    visible: visible,\n    withModal: withModal,\n    disableNativeModal: disableNativeModal\n  }, modalProps), {\n    onRequestClose: onClose,\n    onDismiss: onClose\n  }), React.createElement(HeaderModal, _extends({}, {\n    withFilter: withFilter,\n    onClose: onClose,\n    closeButtonImage: closeButtonImage,\n    closeButtonImageStyle: closeButtonImageStyle,\n    closeButtonStyle: closeButtonStyle,\n    withCloseButton: withCloseButton\n  }, {\n    renderFilter: function renderFilter(props) {\n      return _renderFilter(_objectSpread(_objectSpread({}, props), {}, {\n        renderCountryFilter: renderCountryFilter,\n        onChangeText: setFilter,\n        value: filter,\n        onFocus: onFocus,\n        onBlur: onBlur\n      }, filterProps));\n    }\n  })), React.createElement(CountryList, _extends({}, {\n    onSelect: onSelectClose,\n    data: countries,\n    letters: [],\n    withAlphaFilter: withAlphaFilter && filter === '',\n    withCallingCode: withCallingCode,\n    withCurrency: withCurrency,\n    withFlag: withFlag,\n    withEmoji: withEmoji,\n    filter: filter,\n    filterFocus: filterFocus,\n    flatListProps: flatListProps\n  }))));\n};\nCountryPicker.defaultProps = {\n  withModal: true,\n  withAlphaFilter: false,\n  withCallingCode: false,\n  placeholder: 'Select Country'\n};","map":{"version":3,"sources":["../src/CountryPicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CountryModal } from './CountryModal';\nimport { HeaderModal } from './HeaderModal';\nimport { FlagType } from './types';\nimport { CountryFilter } from './CountryFilter';\nimport { FlagButton } from './FlagButton';\nimport { useContext } from './CountryContext';\nimport { CountryList } from './CountryList';\nconst renderFlagButton = (props) => props.renderFlagButton ? (props.renderFlagButton(props)) : (React.createElement(FlagButton, Object.assign({}, props)));\nconst renderFilter = (props) => props.renderCountryFilter ? (props.renderCountryFilter(props)) : (React.createElement(CountryFilter, Object.assign({}, props)));\nexport const CountryPicker = (props) => {\n    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries } = props;\n    const [state, setState] = useState({\n        visible: props.visible || false,\n        countries: [],\n        filter: '',\n        filterFocus: false,\n    });\n    const { translation, getCountriesAsync } = useContext();\n    const { visible, filter, countries, filterFocus } = state;\n    useEffect(() => {\n        if (state.visible !== props.visible) {\n            setState({ ...state, visible: props.visible || false });\n        }\n    }, [props.visible]);\n    const onOpen = () => {\n        setState({ ...state, visible: true });\n        if (handleOpen) {\n            handleOpen();\n        }\n    };\n    const onClose = () => {\n        setState({ ...state, filter: '', visible: false });\n        if (handleClose) {\n            handleClose();\n        }\n    };\n    const setFilter = (filter) => setState({ ...state, filter });\n    const setCountries = (countries) => setState({ ...state, countries });\n    const onSelectClose = (country) => {\n        onSelect(country);\n        onClose();\n    };\n    const onFocus = () => setState({ ...state, filterFocus: true });\n    const onBlur = () => setState({ ...state, filterFocus: false });\n    const flagProp = {\n        countryCode,\n        withEmoji,\n        withCountryNameButton,\n        withCallingCodeButton,\n        withCurrencyButton,\n        withFlagButton,\n        renderFlagButton: renderButton,\n        onOpen,\n        containerButtonStyle,\n        placeholder,\n    };\n    useEffect(() => {\n        getCountriesAsync(withEmoji ? FlagType.EMOJI : FlagType.FLAT, translation, region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter)\n            .then(setCountries)\n            .catch(console.warn);\n    }, [translation, withEmoji]);\n    return (React.createElement(React.Fragment, null,\n        withModal && renderFlagButton(flagProp),\n        React.createElement(CountryModal, Object.assign({}, { visible, withModal, disableNativeModal, ...modalProps }, { onRequestClose: onClose, onDismiss: onClose }),\n            React.createElement(HeaderModal, Object.assign({}, {\n                withFilter,\n                onClose,\n                closeButtonImage,\n                closeButtonImageStyle,\n                closeButtonStyle,\n                withCloseButton,\n            }, { renderFilter: (props) => renderFilter({\n                    ...props,\n                    renderCountryFilter,\n                    onChangeText: setFilter,\n                    value: filter,\n                    onFocus,\n                    onBlur,\n                    ...filterProps,\n                }) })),\n            React.createElement(CountryList, Object.assign({}, {\n                onSelect: onSelectClose,\n                data: countries,\n                letters: [],\n                withAlphaFilter: withAlphaFilter && filter === '',\n                withCallingCode,\n                withCurrency,\n                withFlag,\n                withEmoji,\n                filter,\n                filterFocus,\n                flatListProps,\n            })))));\n};\nCountryPicker.defaultProps = {\n    withModal: true,\n    withAlphaFilter: false,\n    withCallingCode: false,\n    placeholder: 'Select Country',\n};\n//# sourceMappingURL=CountryPicker.js.map"]},"metadata":{},"sourceType":"module"}