{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var navigation = useNavigation();\n  return React.createElement(PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), React.createElement(Image, {\n    style: [styles.icon, tintColor ? {\n      tintColor: tintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"sources":["DrawerToggleButton.tsx"],"names":["rest","navigation","useNavigation","borderless","DrawerActions","styles","ios","default","top","right","bottom","left","tintColor","require","icon","height","width","margin","resizeMode","touchable","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,iBAAA,QAAA,4BAAA;AACA,SAAA,aAAA,EAAA,aAAA,QAAA,0BAAA;AAKA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAYA,eAAe,SAAA,kBAAA,CAAA,IAAA,EAA2D;EAA/B,IAAA,SAAA,GAA+B,IAA/B,CAAA,SAAA;EAAA,IAAgBA,IAAhB,4BAA+B,IAA/B;;EACzC,IAAMC,UAAU,GAAGC,aAAnB,EAAA;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAEE,UAAU,EAFZ,IAAA;IAGE,iBAAiB,EAHnB,QAAA;IAIE,cAAc,EAAE;MAAEC,UAAU,EAAE;IAAd,CAJlB;IAKE,OAAO,EAAE;MAAA,OAAMF,UAAU,CAAVA,QAAAA,CAAoBG,aAAa,CALlD,YAKqCA,EAApBH,CAAN;IAAA,CALX;IAME,KAAK,EAAEI,MAAM,CANf,SAAA;IAOE,OAAO,EAAE,QAAQ,CAAR,MAAA,CAAgB;MACvBC,GAAG,EADoB,SAAA;MAEvBC,OAAO,EAAE;QAAEC,GAAG,EAAL,EAAA;QAAWC,KAAK,EAAhB,EAAA;QAAsBC,MAAM,EAA5B,EAAA;QAAkCC,IAAI,EAAE;MAAxC;IAFc,CAAhB;EAPX,CAAA,CAAA,EAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAcO,SAAS,GAAG;MAAEA,SAAAA,EAAAA;IAAF,CAAH,GADhC,IACS,CADT;IAEE,MAAM,EAAEC,OAFV,mCAAA;IAGE,YAAY,EAAE;EAHhB,CAAA,CAZF,CADF;AAoBD;AAED,IAAMR,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BS,IAAI,EAAE;IACJC,MAAM,EADF,EAAA;IAEJC,KAAK,EAFD,EAAA;IAGJC,MAAM,EAHF,CAAA;IAIJC,UAAU,EAAE;EAJR,CADyB;EAO/BC,SAAS,EAAE;IACTC,gBAAgB,EAAE;EADT;AAPoB,CAAlB,CAAf","sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessible\n      accessibilityRole=\"button\"\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        style={[styles.icon, tintColor ? { tintColor } : null]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}