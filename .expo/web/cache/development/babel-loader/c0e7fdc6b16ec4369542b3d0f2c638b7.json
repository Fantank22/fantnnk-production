{"ast":null,"code":"import { ANDROID_DISPLAY, ANDROID_MODE, MIN_MS } from \"./constants\";\nimport pickers from \"./picker\";\nimport { sharedPropsValidation } from \"./utils\";\nimport invariant from 'invariant';\nexport function getOpenPicker(_ref) {\n  var mode = _ref.mode,\n      value = _ref.value,\n      display = _ref.display,\n      is24Hour = _ref.is24Hour,\n      minimumDate = _ref.minimumDate,\n      maximumDate = _ref.maximumDate,\n      neutralButtonLabel = _ref.neutralButtonLabel,\n      minuteInterval = _ref.minuteInterval,\n      timeZoneOffsetInMinutes = _ref.timeZoneOffsetInMinutes;\n\n  switch (mode) {\n    case ANDROID_MODE.time:\n      return function () {\n        return pickers[mode].open({\n          value: value,\n          display: display,\n          minuteInterval: minuteInterval,\n          is24Hour: is24Hour,\n          neutralButtonLabel: neutralButtonLabel,\n          timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n        });\n      };\n\n    default:\n      return function () {\n        return pickers[ANDROID_MODE.date].open({\n          value: value,\n          display: display,\n          minimumDate: minimumDate,\n          maximumDate: maximumDate,\n          neutralButtonLabel: neutralButtonLabel,\n          timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n        });\n      };\n  }\n}\nexport function timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes) {\n  if (typeof timeZoneOffsetInMinutes === 'number') {\n    var offset = date.getTimezoneOffset() + timeZoneOffsetInMinutes;\n    var shiftedDate = new Date(date.getTime() - offset * MIN_MS);\n    return shiftedDate;\n  }\n\n  return date;\n}\nexport function validateAndroidProps(props) {\n  sharedPropsValidation({\n    value: props == null ? void 0 : props.value\n  });\n  var mode = props.mode,\n      display = props.display;\n  invariant(!(display === ANDROID_DISPLAY.calendar && mode === ANDROID_MODE.time) && !(display === ANDROID_DISPLAY.clock && mode === ANDROID_MODE.date), \"display: \" + display + \" and mode: \" + mode + \" cannot be used together.\");\n}","map":{"version":3,"names":["ANDROID_DISPLAY","ANDROID_MODE","MIN_MS","pickers","sharedPropsValidation","invariant","getOpenPicker","mode","value","display","is24Hour","minimumDate","maximumDate","neutralButtonLabel","minuteInterval","timeZoneOffsetInMinutes","time","open","date","timeZoneOffsetDateSetter","offset","getTimezoneOffset","shiftedDate","Date","getTime","validateAndroidProps","props","calendar","clock"],"sources":["/Users/mdabdullahalnoman/WorkBackUp/Fantank/exchange/fantank-dev-shared/node_modules/@react-native-community/datetimepicker/src/androidUtils.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport {ANDROID_DISPLAY, ANDROID_MODE, MIN_MS} from './constants';\nimport pickers from './picker';\nimport type {AndroidNativeProps, DateTimePickerResult} from './types';\nimport {sharedPropsValidation} from './utils';\nimport invariant from 'invariant';\ntype PresentPickerCallback = () => Promise<DateTimePickerResult>;\n\ntype Timestamp = number;\n\ntype Params = {\n  value: Timestamp,\n  mode: AndroidNativeProps['mode'],\n  display: AndroidNativeProps['display'],\n  is24Hour: AndroidNativeProps['is24Hour'],\n  minimumDate: AndroidNativeProps['minimumDate'],\n  maximumDate: AndroidNativeProps['maximumDate'],\n  neutralButtonLabel: AndroidNativeProps['neutralButtonLabel'],\n  minuteInterval: AndroidNativeProps['minuteInterval'],\n  timeZoneOffsetInMinutes: AndroidNativeProps['timeZoneOffsetInMinutes'],\n};\nexport function getOpenPicker({\n  mode,\n  value,\n  display,\n  is24Hour,\n  minimumDate,\n  maximumDate,\n  neutralButtonLabel,\n  minuteInterval,\n  timeZoneOffsetInMinutes,\n}: Params): PresentPickerCallback {\n  switch (mode) {\n    case ANDROID_MODE.time:\n      return () =>\n        // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n        pickers[mode].open({\n          value,\n          display,\n          minuteInterval,\n          is24Hour,\n          neutralButtonLabel,\n          timeZoneOffsetInMinutes,\n        });\n    default:\n      return () =>\n        // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n        pickers[ANDROID_MODE.date].open({\n          value,\n          display,\n          minimumDate,\n          maximumDate,\n          neutralButtonLabel,\n          timeZoneOffsetInMinutes,\n        });\n  }\n}\n\nexport function timeZoneOffsetDateSetter(\n  date: Date,\n  timeZoneOffsetInMinutes: ?number,\n): Date {\n  if (typeof timeZoneOffsetInMinutes === 'number') {\n    // FIXME this causes a bug. repro: set tz offset to zero, and then keep opening and closing the calendar picker\n    // https://github.com/react-native-datetimepicker/datetimepicker/issues/528\n    const offset = date.getTimezoneOffset() + timeZoneOffsetInMinutes;\n    const shiftedDate = new Date(date.getTime() - offset * MIN_MS);\n    return shiftedDate;\n  }\n  return date;\n}\n\nexport function validateAndroidProps(props: AndroidNativeProps) {\n  sharedPropsValidation({value: props?.value});\n  const {mode, display} = props;\n  invariant(\n    !(display === ANDROID_DISPLAY.calendar && mode === ANDROID_MODE.time) &&\n      !(display === ANDROID_DISPLAY.clock && mode === ANDROID_MODE.date),\n    `display: ${display} and mode: ${mode} cannot be used together.`,\n  );\n}\n"],"mappings":"AAIA,SAAQA,eAAR,EAAyBC,YAAzB,EAAuCC,MAAvC;AACA,OAAOC,OAAP;AAEA,SAAQC,qBAAR;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAgBA,OAAO,SAASC,aAAT,OAU2B;EAAA,IAThCC,IASgC,QAThCA,IASgC;EAAA,IARhCC,KAQgC,QARhCA,KAQgC;EAAA,IAPhCC,OAOgC,QAPhCA,OAOgC;EAAA,IANhCC,QAMgC,QANhCA,QAMgC;EAAA,IALhCC,WAKgC,QALhCA,WAKgC;EAAA,IAJhCC,WAIgC,QAJhCA,WAIgC;EAAA,IAHhCC,kBAGgC,QAHhCA,kBAGgC;EAAA,IAFhCC,cAEgC,QAFhCA,cAEgC;EAAA,IADhCC,uBACgC,QADhCA,uBACgC;;EAChC,QAAQR,IAAR;IACE,KAAKN,YAAY,CAACe,IAAlB;MACE,OAAO;QAAA,OAELb,OAAO,CAACI,IAAD,CAAP,CAAcU,IAAd,CAAmB;UACjBT,KAAK,EAALA,KADiB;UAEjBC,OAAO,EAAPA,OAFiB;UAGjBK,cAAc,EAAdA,cAHiB;UAIjBJ,QAAQ,EAARA,QAJiB;UAKjBG,kBAAkB,EAAlBA,kBALiB;UAMjBE,uBAAuB,EAAvBA;QANiB,CAAnB,CAFK;MAAA,CAAP;;IAUF;MACE,OAAO;QAAA,OAELZ,OAAO,CAACF,YAAY,CAACiB,IAAd,CAAP,CAA2BD,IAA3B,CAAgC;UAC9BT,KAAK,EAALA,KAD8B;UAE9BC,OAAO,EAAPA,OAF8B;UAG9BE,WAAW,EAAXA,WAH8B;UAI9BC,WAAW,EAAXA,WAJ8B;UAK9BC,kBAAkB,EAAlBA,kBAL8B;UAM9BE,uBAAuB,EAAvBA;QAN8B,CAAhC,CAFK;MAAA,CAAP;EAbJ;AAwBD;AAED,OAAO,SAASI,wBAAT,CACLD,IADK,EAELH,uBAFK,EAGC;EACN,IAAI,OAAOA,uBAAP,KAAmC,QAAvC,EAAiD;IAG/C,IAAMK,MAAM,GAAGF,IAAI,CAACG,iBAAL,KAA2BN,uBAA1C;IACA,IAAMO,WAAW,GAAG,IAAIC,IAAJ,CAASL,IAAI,CAACM,OAAL,KAAiBJ,MAAM,GAAGlB,MAAnC,CAApB;IACA,OAAOoB,WAAP;EACD;;EACD,OAAOJ,IAAP;AACD;AAED,OAAO,SAASO,oBAAT,CAA8BC,KAA9B,EAAyD;EAC9DtB,qBAAqB,CAAC;IAACI,KAAK,EAAEkB,KAAF,oBAAEA,KAAK,CAAElB;EAAf,CAAD,CAArB;EACA,IAAOD,IAAP,GAAwBmB,KAAxB,CAAOnB,IAAP;EAAA,IAAaE,OAAb,GAAwBiB,KAAxB,CAAajB,OAAb;EACAJ,SAAS,CACP,EAAEI,OAAO,KAAKT,eAAe,CAAC2B,QAA5B,IAAwCpB,IAAI,KAAKN,YAAY,CAACe,IAAhE,KACE,EAAEP,OAAO,KAAKT,eAAe,CAAC4B,KAA5B,IAAqCrB,IAAI,KAAKN,YAAY,CAACiB,IAA7D,CAFK,gBAGKT,OAHL,mBAG0BF,IAH1B,+BAAT;AAKD"},"metadata":{},"sourceType":"module"}