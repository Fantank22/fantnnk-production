{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, memo, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from \"./CountryTheme\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nvar borderBottomWidth = 2 / PixelRatio.get();\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  letters: {\n    marginRight: 10,\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letter: {\n    height: 23,\n    width: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letterText: {\n    textAlign: 'center'\n  },\n  itemCountry: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingHorizontal: 5\n  },\n  itemCountryName: {\n    width: '90%'\n  },\n  list: {\n    flex: 1\n  },\n  sep: {\n    borderBottomWidth: borderBottomWidth,\n    width: '100%'\n  }\n});\n\nvar Letter = function Letter(_ref) {\n  var letter = _ref.letter,\n      scrollTo = _ref.scrollTo;\n\n  var _useTheme = useTheme(),\n      fontSize = _useTheme.fontSize,\n      activeOpacity = _useTheme.activeOpacity;\n\n  return React.createElement(TouchableOpacity, _extends({\n    testID: \"letter-\" + letter,\n    key: letter,\n    onPress: function onPress() {\n      return scrollTo(letter);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: styles.letter\n  }, React.createElement(CountryText, {\n    style: [styles.letterText, {\n      fontSize: fontSize * 0.8\n    }],\n    allowFontScaling: false\n  }, letter)));\n};\n\nvar CountryItem = function CountryItem(props) {\n  var _useTheme2 = useTheme(),\n      activeOpacity = _useTheme2.activeOpacity,\n      itemHeight = _useTheme2.itemHeight,\n      flagSize = _useTheme2.flagSize;\n\n  var country = props.country,\n      onSelect = props.onSelect,\n      withFlag = props.withFlag,\n      withEmoji = props.withEmoji,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency;\n  var extraContent = [];\n\n  if (withCallingCode && country.callingCode && country.callingCode.length > 0) {\n    extraContent.push(\"+\" + country.callingCode.join('|'));\n  }\n\n  if (withCurrency && country.currency && country.currency.length > 0) {\n    extraContent.push(country.currency.join('|'));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({\n    key: country.cca2,\n    testID: \"country-selector-\" + country.cca2,\n    onPress: function onPress() {\n      return onSelect(country);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: [styles.itemCountry, {\n      height: itemHeight\n    }]\n  }, withFlag && React.createElement(Flag, _extends({}, {\n    withEmoji: withEmoji,\n    countryCode: country.cca2,\n    flagSize: flagSize\n  })), React.createElement(View, {\n    style: styles.itemCountryName\n  }, React.createElement(CountryText, {\n    allowFontScaling: false,\n    numberOfLines: 2,\n    ellipsizeMode: 'tail'\n  }, country.name, extraContent.length > 0 && \" (\" + extraContent.join(', ') + \")\"))));\n};\n\nCountryItem.defaultProps = {\n  withFlag: true,\n  withCallingCode: false\n};\nvar MemoCountryItem = memo(CountryItem);\n\nvar renderItem = function renderItem(props) {\n  return function (_ref2) {\n    var country = _ref2.item;\n    return React.createElement(MemoCountryItem, _extends({}, _objectSpread({\n      country: country\n    }, props)));\n  };\n};\n\nvar keyExtractor = function keyExtractor(item) {\n  return item.cca2;\n};\n\nvar ItemSeparatorComponent = function ItemSeparatorComponent() {\n  var _useTheme3 = useTheme(),\n      primaryColorVariant = _useTheme3.primaryColorVariant;\n\n  return React.createElement(View, {\n    style: [styles.sep, {\n      borderBottomColor: primaryColorVariant\n    }]\n  });\n};\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport var CountryList = function CountryList(props) {\n  var data = props.data,\n      withAlphaFilter = props.withAlphaFilter,\n      withEmoji = props.withEmoji,\n      withFlag = props.withFlag,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency,\n      onSelect = props.onSelect,\n      filter = props.filter,\n      flatListProps = props.flatListProps,\n      filterFocus = props.filterFocus;\n  var flatListRef = useRef(null);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      letter = _useState2[0],\n      setLetter = _useState2[1];\n\n  var _useTheme4 = useTheme(),\n      itemHeight = _useTheme4.itemHeight,\n      backgroundColor = _useTheme4.backgroundColor;\n\n  var indexLetter = data.map(function (country) {\n    return country.name.substr(0, 1);\n  }).join('');\n\n  var scrollTo = function scrollTo(letter) {\n    var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var index = indexLetter.indexOf(letter);\n    setLetter(letter);\n\n    if (flatListRef.current) {\n      flatListRef.current.scrollToIndex({\n        animated: animated,\n        index: index\n      });\n    }\n  };\n\n  var onScrollToIndexFailed = function onScrollToIndexFailed(_info) {\n    if (flatListRef.current) {\n      flatListRef.current.scrollToEnd();\n      scrollTo(letter);\n    }\n  };\n\n  var _useContext = useContext(),\n      search = _useContext.search,\n      getLetters = _useContext.getLetters;\n\n  var letters = getLetters(data);\n  useEffect(function () {\n    if (data && data.length > 0 && filterFocus && !filter) {\n      scrollTo(letters[0], false);\n    }\n  }, [filterFocus]);\n  var initialNumToRender = Math.round(height / (itemHeight || 1));\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }]\n  }, React.createElement(FlatList, _extends({\n    onScrollToIndexFailed: true,\n    ref: flatListRef,\n    testID: 'list-countries',\n    keyboardShouldPersistTaps: 'handled',\n    automaticallyAdjustContentInsets: false,\n    scrollEventThrottle: 1,\n    getItemLayout: function getItemLayout(_data, index) {\n      return {\n        length: itemHeight + borderBottomWidth,\n        offset: (itemHeight + borderBottomWidth) * index,\n        index: index\n      };\n    },\n    renderItem: renderItem({\n      withEmoji: withEmoji,\n      withFlag: withFlag,\n      withCallingCode: withCallingCode,\n      withCurrency: withCurrency,\n      onSelect: onSelect\n    })\n  }, {\n    data: search(filter, data),\n    keyExtractor: keyExtractor,\n    onScrollToIndexFailed: onScrollToIndexFailed,\n    ItemSeparatorComponent: ItemSeparatorComponent,\n    initialNumToRender: initialNumToRender\n  }, flatListProps)), withAlphaFilter && React.createElement(ScrollView, {\n    contentContainerStyle: styles.letters,\n    keyboardShouldPersistTaps: 'always'\n  }, letters.map(function (letter) {\n    return React.createElement(Letter, _extends({\n      key: letter\n    }, {\n      letter: letter,\n      scrollTo: scrollTo\n    }));\n  })));\n};\nCountryList.defaultProps = {\n  filterFocus: undefined\n};","map":{"version":3,"sources":["../src/CountryList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useRef, memo, useState, useEffect } from 'react';\nimport { StyleSheet, View, FlatList, ScrollView, TouchableOpacity, PixelRatio, Dimensions, } from 'react-native';\nimport { useTheme } from './CountryTheme';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nconst borderBottomWidth = 2 / PixelRatio.get();\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    letters: {\n        marginRight: 10,\n        backgroundColor: 'transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letter: {\n        height: 23,\n        width: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letterText: {\n        textAlign: 'center',\n    },\n    itemCountry: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingHorizontal: 5,\n    },\n    itemCountryName: {\n        width: '90%',\n    },\n    list: {\n        flex: 1,\n    },\n    sep: {\n        borderBottomWidth,\n        width: '100%',\n    },\n});\nconst Letter = ({ letter, scrollTo }) => {\n    const { fontSize, activeOpacity } = useTheme();\n    return (React.createElement(TouchableOpacity, Object.assign({ testID: `letter-${letter}`, key: letter, onPress: () => scrollTo(letter) }, { activeOpacity }),\n        React.createElement(View, { style: styles.letter },\n            React.createElement(CountryText, { style: [styles.letterText, { fontSize: fontSize * 0.8 }], allowFontScaling: false }, letter))));\n};\nconst CountryItem = (props) => {\n    const { activeOpacity, itemHeight, flagSize } = useTheme();\n    const { country, onSelect, withFlag, withEmoji, withCallingCode, withCurrency, } = props;\n    const extraContent = [];\n    if (withCallingCode &&\n        country.callingCode &&\n        country.callingCode.length > 0) {\n        extraContent.push(`+${country.callingCode.join('|')}`);\n    }\n    if (withCurrency && country.currency && country.currency.length > 0) {\n        extraContent.push(country.currency.join('|'));\n    }\n    return (React.createElement(TouchableOpacity, Object.assign({ key: country.cca2, testID: `country-selector-${country.cca2}`, onPress: () => onSelect(country) }, { activeOpacity }),\n        React.createElement(View, { style: [styles.itemCountry, { height: itemHeight }] },\n            withFlag && (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode: country.cca2, flagSize: flagSize }))),\n            React.createElement(View, { style: styles.itemCountryName },\n                React.createElement(CountryText, { allowFontScaling: false, numberOfLines: 2, ellipsizeMode: 'tail' },\n                    country.name,\n                    extraContent.length > 0 && ` (${extraContent.join(', ')})`)))));\n};\nCountryItem.defaultProps = {\n    withFlag: true,\n    withCallingCode: false,\n};\nconst MemoCountryItem = memo(CountryItem);\nconst renderItem = (props) => ({ item: country, }) => (React.createElement(MemoCountryItem, Object.assign({}, { country, ...props })));\nconst keyExtractor = (item) => item.cca2;\nconst ItemSeparatorComponent = () => {\n    const { primaryColorVariant } = useTheme();\n    return (React.createElement(View, { style: [styles.sep, { borderBottomColor: primaryColorVariant }] }));\n};\nconst { height } = Dimensions.get('window');\nexport const CountryList = (props) => {\n    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus, } = props;\n    const flatListRef = useRef(null);\n    const [letter, setLetter] = useState('');\n    const { itemHeight, backgroundColor } = useTheme();\n    const indexLetter = data\n        .map((country) => country.name.substr(0, 1))\n        .join('');\n    const scrollTo = (letter, animated = true) => {\n        const index = indexLetter.indexOf(letter);\n        setLetter(letter);\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({ animated, index });\n        }\n    };\n    const onScrollToIndexFailed = (_info) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToEnd();\n            scrollTo(letter);\n        }\n    };\n    const { search, getLetters } = useContext();\n    const letters = getLetters(data);\n    useEffect(() => {\n        if (data && data.length > 0 && filterFocus && !filter) {\n            scrollTo(letters[0], false);\n        }\n    }, [filterFocus]);\n    const initialNumToRender = Math.round(height / (itemHeight || 1));\n    return (React.createElement(View, { style: [styles.container, { backgroundColor }] },\n        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, getItemLayout: (_data, index) => ({\n                length: itemHeight + borderBottomWidth,\n                offset: (itemHeight + borderBottomWidth) * index,\n                index,\n            }), renderItem: renderItem({\n                withEmoji,\n                withFlag,\n                withCallingCode,\n                withCurrency,\n                onSelect,\n            }) }, {\n            data: search(filter, data),\n            keyExtractor,\n            onScrollToIndexFailed,\n            ItemSeparatorComponent,\n            initialNumToRender,\n        }, flatListProps)),\n        withAlphaFilter && (React.createElement(ScrollView, { contentContainerStyle: styles.letters, keyboardShouldPersistTaps: 'always' }, letters.map(letter => (React.createElement(Letter, Object.assign({ key: letter }, { letter, scrollTo }))))))));\n};\nCountryList.defaultProps = {\n    filterFocus: undefined,\n};\n//# sourceMappingURL=CountryList.js.map"]},"metadata":{},"sourceType":"module"}